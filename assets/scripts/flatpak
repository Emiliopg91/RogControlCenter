#!/usr/bin/env python3

from datetime import datetime
import logging
import os
import subprocess
import sys


# === ConfiguraciÃ³n del logger ===
class _CustomFormatter(logging.Formatter):
    def formatTime(self, record, _=None):
        dt = datetime.fromtimestamp(record.created)
        return dt.strftime("%Y-%m-%d %H:%M:%S.%f")[:-3]


LOGGER_FILE = os.path.join("{{logger_path}}", "runner.log")
log_formatter = _CustomFormatter("%(message)s")
logger = logging.getLogger("launcher")
logger.setLevel(logging.INFO)

# Handler a consola
console_handler = logging.StreamHandler()
console_handler.setFormatter(log_formatter)
logger.addHandler(console_handler)

logger.info(">>> Running flatpak wrapper")

env = os.environ.copy()
path = env["PATH"]

if os.path.dirname(__file__) + os.pathsep in path:
    path = path.replace(os.path.dirname(__file__) + os.pathsep, "")
env["PATH"] = path

cmd = ["flatpak"]

if "OVERRIDE_FLATPAK_ENV" in env and env["OVERRIDE_FLATPAK_ENV"]:
    override = env["OVERRIDE_FLATPAK_ENV"]
    override = override.split(",")
    for entry in override:
        cmd.append(f"--env={entry}={env[entry]}")

for arg in sys.argv[1:]:
    cmd.append(arg)


logger.info(">>> Command:")
logger.info("\t" + (" ".join(cmd)))

sys.exit(subprocess.run(cmd, env=env, check=False).returncode)
