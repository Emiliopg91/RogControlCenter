{"version":3,"file":"index.js","sources":["decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/@decky+api@1.1.2/node_modules/@decky/api/dist/index.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/logger.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/backend.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/utils.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/types/eventBus.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/eventBus.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/toast.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/types/system.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/types/settings.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/system.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/translator.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/settings.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/types/game.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/game.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/types/input.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/input.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/types/whiteboard.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/whiteboard.js","decky://decky/plugin/RCCDeckyCompanion/node_modules/.pnpm/decky-plugin-framework@1.4.4/node_modules/decky-plugin-framework/dist/implementations/framework.js","decky://decky/plugin/RCCDeckyCompanion/src/components/icons/rogIcon.tsx","decky://decky/plugin/RCCDeckyCompanion/src/pages/MainMenu.tsx","decky://decky/plugin/RCCDeckyCompanion/src/utils/constants.ts","decky://decky/plugin/RCCDeckyCompanion/src/utils/backend.ts","decky://decky/plugin/RCCDeckyCompanion/src/utils/listeners.ts","decky://decky/plugin/RCCDeckyCompanion/src/index.tsx"],"sourcesContent":["// Decky Loader will pass this api in, it's versioned to allow for backwards compatibility.\n// @ts-ignore\nimport _manifest from '@decky/manifest';\nexport * from \"./types\";\n// Prevents it from being duplicated in output.\nconst manifest = _manifest;\nconst API_VERSION = 2;\nif (!manifest?.name) {\n    throw new Error('[@decky/api]: Failed to find plugin manifest.');\n}\nconst internalAPIConnection = window.__DECKY_SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_deckyLoaderAPIInit;\n// Initialize\nif (!internalAPIConnection) {\n    throw new Error('[@decky/api]: Failed to connect to the loader as as the loader API was not initialized. This is likely a bug in Decky Loader.');\n}\n// Version 1 throws on version mismatch so we have to account for that here.\nlet api;\ntry {\n    api = internalAPIConnection.connect(API_VERSION, manifest.name);\n}\ncatch {\n    api = internalAPIConnection.connect(1, manifest.name);\n    console.warn(`[@decky/api] Requested API version ${API_VERSION} but the running loader only supports version 1. Some features may not work.`);\n}\nif (api._version != API_VERSION) {\n    console.warn(`[@decky/api] Requested API version ${API_VERSION} but the running loader only supports version ${api._version}. Some features may not work.`);\n}\n// TODO these could use a lot of JSDoc\nexport const call = api.call;\nexport const callable = api.callable;\nexport const addEventListener = api.addEventListener;\nexport const removeEventListener = api.removeEventListener;\nexport const routerHook = api.routerHook;\nexport const toaster = api.toaster;\nexport const openFilePicker = api.openFilePicker;\nexport const executeInTab = api.executeInTab;\nexport const injectCssIntoTab = api.injectCssIntoTab;\nexport const removeCssFromTab = api.removeCssFromTab;\nexport const fetchNoCors = api.fetchNoCors;\nexport const getExternalResourceURL = api.getExternalResourceURL;\n/**\n * Returns state indicating the visibility of quick access menu.\n *\n * @returns `true` if quick access menu is visible and `false` otherwise.\n *\n * @example\n * import { FC, useEffect } from \"react\";\n * import { useQuickAccessVisible } from \"@decky/api\";\n *\n * export const PluginPanelView: FC<{}> = ({ }) => {\n *   const isVisible = useQuickAccessVisible();\n *\n *   useEffect(() => {\n *     if (!isVisible) {\n *       return;\n *     }\n *\n *     const interval = setInterval(() => console.log(\"Hello world!\"), 1000);\n *     return () => {\n *       clearInterval(interval);\n *     }\n *   }, [isVisible])\n *\n *   return (\n *     <div>\n *       {isVisible ? \"VISIBLE\" : \"INVISIBLE\"}\n *     </div>\n *   );\n * };\n */\nexport const useQuickAccessVisible = api.useQuickAccessVisible;\nexport const definePlugin = (fn) => {\n    return (...args) => {\n        // TODO: Maybe wrap this\n        return fn(...args);\n    };\n};\n","import { Backend } from \"./backend\";\n/**\n * Enum for log levels\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 1] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 3] = \"ERROR\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Represents a logging utility.\n */\nexport class Logger {\n    /**\n     * Private constructor to prevent instantiation\n     */\n    constructor() { }\n    /**\n     * Inner class to load log level\n     */\n    static async loadLogLevel() {\n        Logger.currentLevel =\n            LogLevel[(await import(\"./settings\")).Settings.getEntry(\"log_level\", LogLevel[Logger.currentLevel])];\n    }\n    /**\n     * Initializes the logger.\n     */\n    static async initialize(prefix) {\n        Logger.prefix = prefix;\n        await Logger.loadLogLevel();\n        Logger.info(\"Logger initialized at level '\" + LogLevel[Logger.currentLevel] + \"'\");\n    }\n    /**\n     * Logs a message.\n     * @param lvl - The log level.\n     * @param args - The message arguments.\n     */\n    static log(lvl, ...args) {\n        if (Logger.isLevelEnabled(lvl)) {\n            const stack = new Error().stack;\n            const callerLine = stack?.split(\"\\n\")[3].trim().substring(3);\n            const caller = callerLine?.substring(0, callerLine.indexOf(\" \"));\n            let clazz = \"anonymous\";\n            let methd = \"lambda\";\n            if (caller?.includes(\".\")) {\n                clazz = caller.split(\".\")[0];\n                methd = caller.split(\".\")[1];\n            }\n            const callerStr = (clazz + \"::\" + methd).padEnd(25, \" \").substring(0, 25);\n            const levelStr = LogLevel[lvl].padEnd(5, \" \");\n            console.log(\"%c %s %c %s %c %s \", Logger.prefixStyle, Logger.prefix, Logger.levelStyles[lvl], levelStr, Logger.callerStyle, callerStr, ...args);\n            let strArgs = \"\";\n            args.forEach((arg) => {\n                if (typeof arg === \"object\") {\n                    strArgs = strArgs + JSON.stringify(arg) + \" \";\n                }\n                else {\n                    strArgs = strArgs + arg + \" \";\n                }\n            });\n            Backend.backend_call(\"log\", levelStr, \"[\" + callerStr + \"]: \" + strArgs);\n        }\n    }\n    /**\n     * Checks if a log level is enabled.\n     * @param lvl - The log level.\n     * @returns True if the log level is enabled, otherwise false.\n     */\n    static isLevelEnabled(lvl) {\n        return Logger.currentLevel <= lvl;\n    }\n    /**\n     * Logs a debug message.\n     * @param args - The message arguments.\n     */\n    static debug(...args) {\n        Logger.log(LogLevel.DEBUG, ...args);\n    }\n    /**\n     * Logs an info message.\n     * @param args - The message arguments.\n     */\n    static info(...args) {\n        Logger.log(LogLevel.INFO, ...args);\n    }\n    /**\n     * Logs a warning message.\n     * @param args - The message arguments.\n     */\n    static warn(...args) {\n        Logger.log(LogLevel.WARN, ...args);\n    }\n    /**\n     * Logs an error message.\n     * @param args - The message arguments.\n     */\n    static error(...args) {\n        Logger.log(LogLevel.ERROR, ...args);\n    }\n}\n/**\n * The style for the logger prefix.\n */\nLogger.prefixStyle = \"background-color: blue; color: white; font-weight: bold\";\n/**\n * The style for method block.\n */\nLogger.callerStyle = \"background-color: LightCyan; color: black; font-weight: bold\";\n/**\n * Styles for different log levels.\n */\nLogger.levelStyles = {\n    [LogLevel.DEBUG]: \"background-color: PowderBlue; font-weight:bold;\",\n    [LogLevel.INFO]: \"background-color: PaleGreen; font-weight:bold\",\n    [LogLevel.WARN]: \"background-color: Gold; font-weight:bold\",\n    [LogLevel.ERROR]: \"background-color: LightSalmon; font-weight:bold\",\n};\n/**\n * The current log level.\n */\nLogger.currentLevel = LogLevel.INFO;\n","import { addEventListener, call, removeEventListener } from \"@decky/api\";\nimport { Logger } from \"./logger\";\n/**\n * The Backend class provides access to plugin Python backend methods\n */\nexport class Backend {\n    /**\n     * Private constructor to prevent instantiation\n     */\n    constructor() { }\n    /**\n     * Generic method to make backend calls to Python plugin methods\n     * @param name - The name of the method to call\n     * @param params - The parameters to pass to the method\n     * @returns A Promise of the result type\n     */\n    static backend_call(name, ...params) {\n        const t0 = Date.now();\n        return new Promise((resolve, reject) => {\n            if (name != \"log\") {\n                let paramsStr = \"\";\n                if (params) {\n                    params.forEach((val, idx) => {\n                        paramsStr = paramsStr + JSON.stringify(val);\n                        if (idx < params.length - 1) {\n                            paramsStr = paramsStr + \", \";\n                        }\n                    });\n                }\n                Logger.debug(\"Backend invocation: \" + name + \"(\" + paramsStr + \")\");\n            }\n            call(name, ...params).then((value) => {\n                if (name != \"log\") {\n                    Logger.debug(\"Backend invocation finished in \" + (Date.now() - t0) + \" ms with result: \" + JSON.stringify(value));\n                }\n                resolve(value);\n            }).catch((reason) => {\n                if (name != \"log\") {\n                    Logger.error(\"Backend invocation failed after \" + (Date.now() - t0) + \" ms with error: \" + JSON.stringify(reason));\n                }\n                reject(reason);\n            });\n        });\n    }\n    static backend_wait(category, callBack) {\n        addEventListener(category, callBack);\n        return () => { removeEventListener(category, callBack); };\n    }\n}\n","/**\n * Class for utilities\n */\nexport class Utils {\n    /**\n     * Private constructor to prevent instantiation\n     */\n    constructor() { }\n    /**\n     * Generate id\n     * @param existingIds - List of existing ids to prevent collision\n     * @returns Generated id\n     */\n    static generateId(existingIds = []) {\n        let id = String(Date.now());\n        if (!existingIds.includes(id)) {\n            return id;\n        }\n        let idx = 0;\n        do {\n            if (!existingIds.includes(id + \"-\" + idx)) {\n                return id + \"-\" + idx;\n            }\n            idx++;\n        } while (true);\n    }\n    static intToIp(ipInt) {\n        return ((ipInt >>> 24) + '.' + (ipInt >> 16 & 255) + '.' + (ipInt >> 8 & 255) + '.' + (ipInt & 255));\n    }\n    static ipAndMaskToSubnet(ipInt, netmask) {\n        return ((ipInt >>> 24 & netmask >>> 24) + '.' + ((ipInt >> 16 & 255) & (netmask >> 16 & 255)) + '.' + ((ipInt >> 8 & 255) & (netmask >> 8 & 255)) + '.' + ((ipInt & 255) & (netmask & 255)));\n    }\n}\n","/**\n * Enum for type of events\n */\nexport var EventType;\n(function (EventType) {\n    EventType[EventType[\"GAME_LIFE\"] = 0] = \"GAME_LIFE\";\n    EventType[EventType[\"INPUT\"] = 1] = \"INPUT\";\n    EventType[EventType[\"SHORTCUT\"] = 2] = \"SHORTCUT\";\n    EventType[EventType[\"SETTINGS\"] = 3] = \"SETTINGS\";\n    EventType[EventType[\"WHITEBOARD\"] = 4] = \"WHITEBOARD\";\n    EventType[EventType[\"SUSPEND\"] = 5] = \"SUSPEND\";\n    EventType[EventType[\"NETWORK\"] = 6] = \"NETWORK\";\n    EventType[EventType[\"LOGIN\"] = 7] = \"LOGIN\";\n})(EventType || (EventType = {}));\n/**\n * Abstract class for Event Data\n */\nexport class EventData {\n    constructor() {\n        this._emmitedOn = Date.now();\n    }\n    /**\n     * Get event emission time\n     * @returns Emission time\n     */\n    getEmmitedOn() {\n        return this._emmitedOn;\n    }\n}\n","import { Utils } from \"./utils\";\nimport { EventType } from \"../types/eventBus\";\n/**\n * Class for subscribe to framework event bus\n */\nexport class EventBus {\n    /**\n     * Publish event on bus\n     * @param type - Type of event\n     * @param data - Data of event\n     */\n    static async publishEvent(type, data) {\n        Object.keys(EventBus.subscribers[type]).forEach((id) => {\n            EventBus.subscribers[type][id](data);\n        });\n    }\n    /**\n     * Subscribe for events on bus\n     * @param type - Type of event\n     * @param callback - Callback function to deal the event\n     * @returns Object with information about subscription\n     */\n    static subscribe(type, callback) {\n        const id = Utils.generateId(Object.keys(EventBus.subscribers[type]));\n        this.subscribers[type][id] = callback;\n        return {\n            id, unsubscribe: () => {\n                delete EventBus.subscribers[type][id];\n            }\n        };\n    }\n    /**\n     * Remove all subscriptors for specified type\n     * @param type Type of event to delete subscriptors\n     */\n    static unsubscribeAll(type) {\n        this.subscribers[type] = {};\n    }\n}\n/**\n * Maps of subscribers\n */\nEventBus.subscribers = {\n    [EventType.GAME_LIFE]: {},\n    [EventType.INPUT]: {},\n    [EventType.SHORTCUT]: {},\n    [EventType.SETTINGS]: {},\n    [EventType.WHITEBOARD]: {},\n    [EventType.SUSPEND]: {},\n    [EventType.NETWORK]: {},\n    [EventType.LOGIN]: {}\n};\n","import { toaster } from \"@decky/api\";\n/**\n * Represents a toast notification utility.\n */\nexport class Toast {\n    /**\n     * Private constructor to prevent instantiation\n     */\n    constructor() {\n    }\n    /**\n     * Initialize class\n     * @param appName - Plugin name\n     * @param serverApi - ServerAPI of plugin\n     */\n    static initialize(appName, settings) {\n        Toast.appName = appName;\n        if (settings && settings.logo) {\n            Toast.logo = settings.logo;\n        }\n    }\n    /**\n     * Displays a toast notification.\n     * @param msg - The message to display.\n     * @param ms - The duration of the toast notification in milliseconds (default is 3000).\n     * @param clickAction - The action to perform when the toast notification is clicked (default is an empty function).\n     */\n    static toast(msg, ms = 3000, clickAction = () => { }) {\n        toaster.toast({ title: Toast.appName, body: msg, duration: ms, onClick: clickAction, logo: Toast.logo });\n    }\n}\nToast.logo = undefined;\n","import { EventData } from \"./eventBus\";\nexport class LoginEventData extends EventData {\n    constructor(username) {\n        super();\n        this._username = username;\n    }\n    getUsername() {\n        return this._username;\n    }\n}\n/**\n * Class for Suspend event\n */\nexport class SuspendEventData extends EventData {\n    constructor(isSuspend) {\n        super();\n        this._suspend = isSuspend;\n    }\n    /**\n     * If SteamDeck is suspending\n     * @returns If is suspending\n     */\n    isSuspend() {\n        return this._suspend;\n    }\n    /**\n     * If SteamDeck is resuming\n     * @returns If is resuming\n     */\n    isResume() {\n        return !this._suspend;\n    }\n}\n/**\n * Class for network event\n */\nexport class NetworkEventData extends EventData {\n    constructor(isConnectedToInet) {\n        super();\n        this._connectedToInet = isConnectedToInet;\n    }\n    /**\n     * If SteamDeck is connected to inet\n     * @returns If is connected to inet\n     */\n    isConnectedToInet() {\n        return this._connectedToInet;\n    }\n}\n","import { EventData } from \"./eventBus\";\n/**\n * Class for settings events\n */\nexport class SettingsEventData extends EventData {\n    constructor(settings) {\n        super();\n        this._settings = settings;\n    }\n    /**\n     * Get new settings\n     * @returns New settings\n     */\n    getSettings() {\n        return this._settings;\n    }\n}\nexport class NetworkInfo {\n    constructor(wired, mac, ip, subnet, subnetMask, dnsIps, accessPoint) {\n        this.wired = wired;\n        this.mac = mac;\n        this.ip = ip;\n        this.subnet = subnet;\n        this.subnetMask = subnetMask;\n        this.dnsIps = dnsIps;\n        this.accessPoint = accessPoint;\n    }\n    isWired() {\n        return this.wired;\n    }\n    getMac() {\n        return this.mac;\n    }\n    getIp() {\n        return this.ip;\n    }\n    getSubnet() {\n        return this.subnet;\n    }\n    getSubnetMask() {\n        return this.subnetMask;\n    }\n    getDnsIps() {\n        return this.dnsIps;\n    }\n    getAccessPoint() {\n        return this.accessPoint;\n    }\n}\n","import { EventBus } from \"./eventBus\";\nimport { EventType } from \"../types/eventBus\";\nimport { LoginEventData, NetworkEventData, SuspendEventData } from \"../types/system\";\nimport { Utils } from \"./utils\";\nimport { NetworkInfo } from \"../types/settings\";\n/**\n * Class for access system information\n */\nexport class System {\n    /**\n     * Initialize class and subscriptions\n     * @returns Promise for readiness\n     */\n    static async initialize(cfg) {\n        if (cfg.login) {\n            System.currentUser = loginStore.accountName;\n            System.unregisterLogin = SteamClient.User.RegisterForLoginStateChange((username) => {\n                System.currentUser = username;\n                EventBus.publishEvent(EventType.LOGIN, new LoginEventData(username));\n            }).unregister;\n        }\n        if (cfg.suspension) {\n            System.unregisterSuspend = SteamClient.System.RegisterForOnSuspendRequest(() => {\n                EventBus.publishEvent(EventType.SUSPEND, new SuspendEventData(true));\n            }).unregister;\n        }\n        if (cfg.resume) {\n            System.unregisterResume = SteamClient.System.RegisterForOnResumeFromSuspend(() => {\n                EventBus.publishEvent(EventType.SUSPEND, new SuspendEventData(false));\n            }).unregister;\n        }\n        if (cfg.network) {\n            System.unregisterNetworkState = SteamClient.System.Network.RegisterForConnectivityTestChanges((e) => {\n                if (!e.bChecking) {\n                    const connected = e.eConnectivityTestResult === 0 || e.eConnectivityTestResult === 1;\n                    if (System.connectedInet != connected) {\n                        System.connectedInet = connected;\n                        EventBus.publishEvent(EventType.NETWORK, new NetworkEventData(connected));\n                    }\n                }\n            }).unregister;\n            SteamClient.System.Network.ForceTestConnectivity();\n            const networkInterval = setInterval(() => { SteamClient.System.Network.ForceTestConnectivity(); }, 10000);\n            System.unregisterNetwork = () => { clearInterval(networkInterval); };\n        }\n    }\n    /**\n     * Stop subscriptions\n     */\n    static stop() {\n        System.unregisterLogin();\n        System.unregisterSuspend();\n        System.unregisterResume();\n        System.unregisterNetworkState();\n        System.unregisterNetwork();\n        EventBus.unsubscribeAll(EventType.SUSPEND);\n        EventBus.unsubscribeAll(EventType.LOGIN);\n    }\n    /**\n     * Get current language\n     * @returns UI language\n     */\n    static getLanguage() {\n        return window.LocalizationManager.m_rgLocalesToUse[0];\n    }\n    /**\n     * Get country for system based on IP\n     * @returns Promise for IP Country\n     */\n    static getIpCountry() {\n        return SteamClient.User.GetIPCountry();\n    }\n    /**\n     * Get current username\n     * @returns Username\n     */\n    static getCurrentUser() {\n        return System.currentUser;\n    }\n    /**\n     * Get current username\n     * @returns Username\n     */\n    static isConnectedToInet() {\n        return System.connectedInet;\n    }\n    static async getSteamDeckName() {\n        return SteamClient.Auth.GetLocalHostname();\n    }\n    static getNetworkInfo() {\n        const result = [];\n        const knownMacs = [];\n        const knownIps = [];\n        if (SystemNetworkStore.accessPoints !== undefined) {\n            SystemNetworkStore.accessPoints.forEach((ap) => {\n                const mac = ap.m_DeviceInfo.mac;\n                if (ap.m_DeviceInfo.ip4.addresses !== undefined && !knownMacs.includes(ap.m_DeviceInfo.mac)) {\n                    ap.m_DeviceInfo.ip4.addresses.forEach((addr) => {\n                        const ip = Utils.intToIp(addr.ip);\n                        if (!knownIps.includes(ip)) {\n                            let dnsIps = [];\n                            const subnet = Utils.ipAndMaskToSubnet(addr.ip, addr.netmask);\n                            const subnetMask = Utils.intToIp(addr.netmask);\n                            if (ap.m_DeviceInfo.ip4.dns_ip !== undefined) {\n                                ap.m_DeviceInfo.ip4.dns_ip.forEach((dns) => {\n                                    dnsIps.push(Utils.intToIp(dns));\n                                });\n                            }\n                            if (ap.m_DeviceInfo.wired === undefined) {\n                                ap.m_DeviceInfo.wireless.aps.forEach((wap) => {\n                                    if (wap.is_active) {\n                                        knownIps.push(ip);\n                                        knownMacs.push(mac);\n                                        result.push(new NetworkInfo(false, mac, ip, subnet, subnetMask, dnsIps, wap.ssid));\n                                    }\n                                });\n                            }\n                            else {\n                                if (ap.m_DeviceInfo.wired.is_cable_present) {\n                                    knownIps.push(ip);\n                                    knownMacs.push(mac);\n                                    result.push(new NetworkInfo(true, mac, ip, subnet, subnetMask, dnsIps, ap.m_DeviceInfo.wired.friendly_name));\n                                }\n                            }\n                        }\n                    });\n                }\n            });\n        }\n        return result;\n    }\n    static getScreenBrightness() {\n        return SystemStoragStore.m_flDisplayBrightness.m_currentValue;\n    }\n    static setScreenBrightness(level) {\n        SteamClient.System.Display.SetBrightness(level);\n    }\n    static isAirplaneModeEnabled() {\n        return SystemStoragStore.m_bAirplaneMode.m_currentValue;\n    }\n    static setAirplaneModeEnabled(enabled) {\n        SteamClient.System.SetAirplaneMode(enabled);\n    }\n}\n/**\n * Current user name\n */\nSystem.currentUser = \"annonymous\";\nSystem.connectedInet = false;\n","import { Logger } from \"./logger\";\nimport { System } from \"./system\";\n/**\n * The Translator class is used to translate text into different languages.\n */\nexport class Translator {\n    /**\n     * Private constructor to prevent instantiation\n     */\n    constructor() {\n    }\n    /**\n     * Method to set up the translator. It retrieves the current language from the SteamClient.Settings,\n     * logs the language, and sets the currDictionary to the dictionary of the current language.\n     * If the current language is not English and no translation is available, it falls back to English.\n     */\n    static initialize(settings) {\n        if (settings.translations) {\n            Translator.curLang = System.getLanguage();\n            Logger.info(\"Initializing translator. Current language \" + Translator.curLang);\n            Translator.dictionary = settings.translations;\n        }\n    }\n    /**\n     * Method to translate a given text into the current language.\n     * @param key - The text to translate\n     * @param replacements - An object that contains key-value pairs to replace in the text\n     * @returns The translated text. If a translation for a text is not found in the current dictionary, the original text is returned.\n     */\n    static translate(key, replacements = {}) {\n        let result = key;\n        if (Translator.dictionary[key] !== null && Translator.dictionary[key] !== undefined) {\n            const keyEntry = Translator.dictionary[key];\n            if (keyEntry[Translator.curLang] !== null && keyEntry[Translator.curLang] !== undefined) {\n                result = keyEntry[Translator.curLang];\n            }\n            else {\n                if (keyEntry[Translator.defLang] !== null && keyEntry[Translator.defLang] !== undefined) {\n                    result = keyEntry[Translator.defLang];\n                }\n            }\n            for (const key in replacements) {\n                const placeholder = `{{${key}}}`;\n                result = result.split(placeholder).join(replacements[key]);\n            }\n        }\n        return result;\n    }\n}\n/**\n * The dictionary\n */\nTranslator.dictionary = {};\n/**\n * Default language\n */\nTranslator.defLang = \"en\";\n/**\n * Current language\n */\nTranslator.curLang = \"en\";\n","import { Backend } from \"./backend\";\nimport { EventBus } from \"./eventBus\";\nimport { EventType } from \"../types/eventBus\";\nimport { Logger } from \"./logger\";\nimport { SettingsEventData } from \"../types/settings\";\n/**\n * Class for deal with plugin configuration\n */\nexport class Settings {\n    /**\n     * Load configuration from file\n     */\n    static async initialize() {\n        Settings.configuration = await Backend.backend_call(\"get_config\");\n        Logger.info(\"Loaded configuration from file: \" +\n            JSON.stringify(Settings.configuration));\n        Settings.notifyChanges();\n    }\n    /**\n     * Stop subscriptions\n     */\n    static stop() {\n        EventBus.unsubscribeAll(EventType.SHORTCUT);\n    }\n    static getConfiguration() {\n        return JSON.parse(JSON.stringify(this.configuration));\n    }\n    static getConfigurationStructured() {\n        const structured = {};\n        let record = Settings.configuration;\n        for (const key in record) {\n            const value = record[key];\n            const keyParts = key.split(\".\");\n            let currentLevel = structured;\n            for (let i = 0; i < keyParts.length - 1; i++) {\n                const part = keyParts[i];\n                if (!(part in currentLevel)) {\n                    currentLevel[part] = {};\n                }\n                currentLevel = currentLevel[part];\n            }\n            const lastPart = keyParts[keyParts.length - 1];\n            currentLevel[lastPart] = value;\n        }\n        return structured;\n    }\n    // Método estático que devuelve un objeto proxy que observa cambios en el JSON\n    static getProxiedSettings(obj = {}, basePath = '') {\n        const handler = {\n            get(target, property) {\n                const value = Reflect.get(target, property);\n                // Si el valor es un objeto, lo envolvemos en un proxy recursivo\n                if (typeof value === 'object' && value !== null) {\n                    const newPath = basePath ? `${basePath}.${String(property)}` : String(property);\n                    return Settings.getProxiedSettings(value, newPath);\n                }\n                return value;\n            },\n            set(target, property, value, receiver) {\n                const prevValue = Reflect.get(target, property);\n                if (value != prevValue) {\n                    const newPath = basePath ? `${basePath}.${String(property)}` : String(property);\n                    const success = Reflect.set(target, property, value, receiver);\n                    Settings.setEntry(newPath, value, true);\n                    return success;\n                }\n                else {\n                    return true;\n                }\n            },\n            deleteProperty(target, property) {\n                const newPath = basePath ? `${basePath}.${String(property)}` : String(property);\n                // Elimina la propiedad del objeto\n                const success = Reflect.deleteProperty(target, property);\n                // Llama a deleteValue con la ruta completa\n                Settings.deleteEntry(newPath, true);\n                return success;\n            }\n        };\n        return new Proxy(obj, handler);\n    }\n    /**\n     * Get configuration entry\n     * @param key - Name of the property\n     * @param defaultValue - Default value\n     * @returns Entry or default value\n     */\n    static getEntry(key, defaultValue = null) {\n        let result = Settings.configuration[key];\n        if (result != null && result != undefined)\n            return result;\n        return defaultValue;\n    }\n    /**\n     * Set configuration entry\n     * @param key - Name of the property\n     * @param value - Value to set\n     * @param persist - If the value will be persisted to file\n     */\n    static async setEntry(key, value, persist = false) {\n        Logger.info(\"Setting configuration \" + JSON.stringify(key) + \"=\" + JSON.stringify(value));\n        Settings.configuration[key] = value;\n        if (persist) {\n            Logger.info(\"Persisting to config file\");\n            Backend.backend_call(\"set_config\", String(key), value);\n        }\n        Settings.notifyChanges();\n    }\n    /**\n     * delete configuration entry\n     * @param key - Name of the property\n     * @param persist - If the value will be persisted to file\n     */\n    static deleteEntry(key, persist = false) {\n        Logger.info(\"Deleting configuration '\" + String(key)) + \"'\";\n        const oldValue = Settings.getEntry(key);\n        delete Settings.configuration[key];\n        if (persist) {\n            Logger.info(\"Persisting to config file\");\n            Backend.backend_call(\"delete_config\", String(key));\n        }\n        Settings.notifyChanges();\n        return oldValue;\n    }\n    /**\n     * Inner method to notify configuration changes\n     */\n    static async notifyChanges() {\n        const data = new SettingsEventData({\n            ...Settings.configuration,\n        });\n        EventBus.publishEvent(EventType.SETTINGS, data);\n    }\n}\n/**\n * Map of configuration\n */\nSettings.configuration = {};\n","import { Game } from \"../implementations/game\";\nimport { EventData } from \"./eventBus\";\n/**\n * Game detail entry class\n */\nexport class GameEntry {\n    constructor(gameId) {\n        this._gameId = gameId;\n    }\n    /**\n     * Id of game\n     * @returns Id\n     */\n    getGameId() {\n        return this._gameId;\n    }\n    /**\n     * Get display name of game\n     * @returns Display name\n     */\n    getDisplayName() {\n        return appStore.GetAppOverviewByGameID(this._gameId)?.display_name;\n    }\n    /**\n     * Get if game is external or Steam game\n     * @returns If is Steam game\n     */\n    isSteamGame() {\n        return appStore.GetAppOverviewByGameID(this._gameId)?.app_type === 1;\n    }\n    /**\n     * Get if game support cloud save or not\n     * @returns If game support cloud save\n     */\n    allowsCloudSave() {\n        return appStore.GetAppOverviewByGameID(this._gameId)?.local_per_client_data?.cloud_status !== 1;\n    }\n}\n/**\n * Class for GameLife events\n */\nexport class GameLifeEventData extends EventData {\n    constructor(gameId, isRunning, pid) {\n        super();\n        this._gameId = gameId;\n        this._isRunning = isRunning;\n        this._pid = pid;\n    }\n    /**\n     * Get id of game\n     * @returns Game id\n     */\n    getGameId() {\n        return this._gameId;\n    }\n    /**\n     * Get if game has been launched\n     * @returns If game has been launched\n     */\n    isRunning() {\n        return this._isRunning;\n    }\n    /**\n     * Get if game has been stopped\n     * @returns If game has been stopeed\n     */\n    isStopped() {\n        return !this._isRunning;\n    }\n    /**\n     * Get root grocess id of game\n     * @returns PID of game\n     */\n    getPID() {\n        return this._pid;\n    }\n    /**\n     * Get details of current game\n     * @returns Game details\n     */\n    async getDetails() {\n        return Game.getGameDetails(this._gameId);\n    }\n}\n","import { EventBus } from \"./eventBus\";\nimport { EventType } from \"../types/eventBus\";\nimport { GameLifeEventData, GameEntry } from \"../types/game\";\nimport { Router } from \"@decky/ui\";\n/**\n * Class for access game information\n */\nexport class Game {\n    /**\n     * Private constructor to prevent instantiation\n     */\n    constructor() { }\n    /**\n     * Initialize class\n     */\n    static initialize(settings) {\n        if (settings.lifeCycle) {\n            Game.unsubscriber = SteamClient.GameSessions.RegisterForAppLifetimeNotifications((e) => {\n                const data = new GameLifeEventData(e.unAppID, e.bRunning, e.nInstanceID);\n                EventBus.publishEvent(EventType.GAME_LIFE, data);\n            }).unregister;\n        }\n    }\n    /**\n     * Stop subscriptions\n     */\n    static stop() {\n        Game.unsubscriber();\n        EventBus.unsubscribeAll(EventType.GAME_LIFE);\n    }\n    /**\n     * Get details for specified game\n     * @param gameId - Id of game\n     * @returns Details entry of game\n     */\n    static getGameDetails(gameId) {\n        return new GameEntry(gameId);\n    }\n    /**\n     * Get all running games\n     * @returns List of running game details\n     */\n    static getRunningGames() {\n        let result = [];\n        Router.RunningApps.forEach((g) => {\n            const entry = new GameEntry(Number(g.appid));\n            result.push(entry);\n        });\n        return result;\n    }\n}\n","import { EventData } from \"./eventBus\";\n/**\n * Literals for every button\n */\nconst buttonAliases = {\n    [12 /* Button.SELECT */]: \"SELECT\",\n    [13 /* Button.STEAM */]: \"STEAM\",\n    [14 /* Button.START */]: \"START\",\n    [50 /* Button.QUICK_ACCESS_MENU */]: \"QUICK_ACCESS_MENU\",\n    [8 /* Button.DPAD_UP */]: \"DPAD_UP\",\n    [9 /* Button.DPAD_RIGHT */]: \"DPAD_RIGHT\",\n    [10 /* Button.DPAD_LEFT */]: \"DPAD_LEFT\",\n    [11 /* Button.DPAD_DOWN */]: \"DPAD_DOWN\",\n    [4 /* Button.Y */]: \"Y\",\n    [5 /* Button.B */]: \"B\",\n    [6 /* Button.X */]: \"X\",\n    [7 /* Button.A */]: \"A\",\n    [3 /* Button.L1 */]: \"L1\",\n    [1 /* Button.L2 */]: \"L2\",\n    [22 /* Button.L3 */]: \"L3\",\n    [41 /* Button.L4 */]: \"L4\",\n    [15 /* Button.L5 */]: \"L5\",\n    [2 /* Button.R1 */]: \"R1\",\n    [0 /* Button.R2 */]: \"R2\",\n    [26 /* Button.R3 */]: \"R3\",\n    [42 /* Button.R4 */]: \"R4\",\n    [16 /* Button.R5 */]: \"R5\",\n    [17 /* Button.LEFT_TOUCHPAD_CLICK */]: \"LEFT_TOUCHPAD_CLICK\",\n    [18 /* Button.RIGHT_TOUCHPAD_CLICK */]: \"RIGHT_TOUCHPAD_CLICK\",\n    [19 /* Button.LEFT_TOUCHPAD_TOUCH */]: \"LEFT_TOUCHPAD_TOUCH\",\n    [20 /* Button.RIGHT_TOUCHPAD_TOUCH */]: \"RIGHT_TOUCHPAD_TOUCH\",\n    [46 /* Button.LEFT_JOYSTICK_TOUCH */]: \"LEFT_JOYSTICK_TOUCH\",\n    [47 /* Button.RIGHT_JOYSTICK_TOUCH */]: \"RIGHT_JOYSTICK_TOUCH\"\n};\n/**\n * Class for input events\n */\nexport class InputEventData extends EventData {\n    constructor(buttons) {\n        super();\n        this._buttons = buttons;\n    }\n    /**\n     * Get list of pressed buttons\n     * @returns Pressed buttons\n     */\n    getButtons() {\n        return this._buttons;\n    }\n    /**\n     * Get string representation of pressed buttons\n     * @returns Pressed buttons string\n     */\n    toString() {\n        let line = \"[\";\n        this._buttons.forEach(button => line = line + buttonAliases[button] + \", \");\n        if (line.endsWith(\", \")) {\n            line = line.slice(0, -2);\n        }\n        line = line + \"]\";\n        return line;\n    }\n}\n/**\n * Class for shortcut events\n */\nexport class ShortcutEventData extends InputEventData {\n    constructor(buttons, id, pressed) {\n        super(buttons);\n        this._id = id;\n        this._pressed = pressed;\n    }\n    /**\n     * Get id of shortcut\n     * @returns Id of shortcut\n     */\n    getId() {\n        return this._id;\n    }\n    /**\n     * Get if shortcut has been triggered or not\n     * @returns If shortcut has been triggered\n     */\n    isTriggered() {\n        return this._pressed;\n    }\n    /**\n     * Get if shortcut has been released or not\n     * @returns If shortcut has been released\n     */\n    isReleased() {\n        return !this._pressed;\n    }\n    /**\n     * Check if shortcut correspond to specified buttons\n     * @param buttons - List of buttons to check\n     * @returns If matches with buttons\n     */\n    isFor(buttons) {\n        return this.getButtons().length === buttons.length && this.getButtons().every((value) => buttons.includes(value));\n    }\n}\n","import { Logger } from \"./logger\";\nimport { EventBus } from \"./eventBus\";\nimport { InputEventData, ShortcutEventData } from \"../types/input\";\nimport { EventType } from \"../types/eventBus\";\nimport { Router } from \"@decky/ui\";\n/**\n * Class for emit input events\n */\nexport class InputListener {\n    /**\n     * Initialize class and subscribers\n     */\n    static initialize() {\n        if (!InputListener.unsubscriber) {\n            InputListener.unsubscriber = SteamClient.Input.RegisterForControllerStateChanges((changes) => {\n                const currentState = [];\n                for (const change of changes) {\n                    const lower_buttons = change.ulButtons.toString(2).padStart(32, \"0\").split('');\n                    for (const [index, value] of lower_buttons.entries()) {\n                        if (value === '1') {\n                            currentState.push(31 - index);\n                        }\n                    }\n                    const upper_buttons = change.ulUpperButtons.toString(2).padStart(32, \"0\").split('');\n                    for (const [index, value] of upper_buttons.entries()) {\n                        if (value === '1') {\n                            currentState.push(63 - index);\n                        }\n                    }\n                }\n                let hasChanged = !currentState.every((button) => InputListener.previousState.includes(button))\n                    || !InputListener.previousState.every((button) => currentState.includes(button));\n                if (hasChanged) {\n                    InputListener.previousState = currentState;\n                    const data = new InputEventData(currentState);\n                    EventBus.publishEvent(EventType.INPUT, data);\n                    Logger.debug(\"Pressed inputs: \" + data.toString());\n                }\n            }).unregister;\n        }\n    }\n    /**\n     * Stop subscriptions\n     */\n    static stop() {\n        InputListener.unsubscriber();\n        EventBus.unsubscribeAll(EventType.INPUT);\n    }\n}\n/**\n * List of previous pressed buttons\n */\nInputListener.previousState = [];\n/**\n * Class for emit shortcut events\n */\nexport class ShortcutListener {\n    /**\n     * Initialize class and subscribe\n     */\n    static initialize() {\n        EventBus.subscribe(EventType.INPUT, ShortcutListener.onKeyEvent);\n    }\n    /**\n     * Stop subscriptions\n     */\n    static stop() {\n        ShortcutListener.definitions = {};\n        EventBus.unsubscribeAll(EventType.SHORTCUT);\n    }\n    /**\n     * Register new shortcut to watch for\n     * @param id - Alias for shortcut\n     * @param buttons - List of buttons\n     */\n    static watch(id, buttons) {\n        ShortcutListener.definitions[id] = { buttons, pressed: false, time: Date.now(), qamAndSteamDisabled: false };\n    }\n    /**\n     * Inner method to process pressed button events\n     * @param data - Event data\n     */\n    static onKeyEvent(data) {\n        const buttons = data.getButtons();\n        Object.keys(ShortcutListener.definitions).forEach((id) => {\n            const shortcut = ShortcutListener.definitions[id];\n            if (shortcut.buttons.length === buttons.length && shortcut.buttons.every((value) => buttons.includes(value))) {\n                if (shortcut.pressed != true && Date.now() - shortcut.time > 350) {\n                    if (buttons.includes(50 /* Button.QUICK_ACCESS_MENU */) || buttons.includes(13 /* Button.STEAM */)) {\n                        Router.DisableHomeAndQuickAccessButtons();\n                        shortcut.qamAndSteamDisabled = true;\n                        shortcut.pressed = true;\n                    }\n                    shortcut.time = Date.now();\n                    shortcut.pressed = true;\n                    const data = new ShortcutEventData([...shortcut.buttons], id, true);\n                    EventBus.publishEvent(EventType.SHORTCUT, data);\n                    Logger.debug(\"Pressed shortcut: \" + data.toString());\n                }\n            }\n            else {\n                if (shortcut.qamAndSteamDisabled &&\n                    (!buttons.includes(50 /* Button.QUICK_ACCESS_MENU */) || !buttons.includes(13 /* Button.STEAM */))) {\n                    shortcut.qamAndSteamDisabled = false;\n                    setTimeout(() => {\n                        let reenable = true;\n                        Object.keys(ShortcutListener.definitions).forEach((id) => {\n                            reenable = reenable && ShortcutListener.definitions[id].qamAndSteamDisabled;\n                        });\n                        if (reenable) {\n                            Router.EnableHomeAndQuickAccessButtons();\n                        }\n                    }, 350);\n                }\n                if (shortcut.pressed != false) {\n                    shortcut.pressed = false;\n                    const data = new ShortcutEventData([...shortcut.buttons], id, false);\n                    EventBus.publishEvent(EventType.SHORTCUT, data);\n                    Logger.debug(\"Released shortcut: \" + data.toString);\n                }\n            }\n        });\n    }\n}\n/**\n * Shortcut definitions\n */\nShortcutListener.definitions = {};\n","import { EventData } from \"./eventBus\";\nexport class WhiteBoardEventData extends EventData {\n    constructor(id, value) {\n        super();\n        this._id = id;\n        this._value = value;\n    }\n    getId() {\n        return this._id;\n    }\n    getValue() {\n        return this._value;\n    }\n}\n","import { EventBus } from \"./eventBus\";\nimport { EventType } from \"../types/eventBus\";\nimport { WhiteBoardEventData } from \"../types/whiteboard\";\n/**\n * Class for share updatable information\n */\nexport class WhiteBoard {\n    /**\n     * Clear whiteboard and stop subscriptions\n     */\n    static stop() {\n        WhiteBoard.removeAll();\n        EventBus.unsubscribeAll(EventType.WHITEBOARD);\n    }\n    /**\n     * Set value on whiteboard\n     * @param id - Name of property\n     * @param value - Value to set\n     */\n    static set(id, value) {\n        const entry = WhiteBoard.entries[id];\n        WhiteBoard.entries[id] = value;\n        if (entry != value)\n            this.publishEvent(id, value);\n    }\n    /**\n     * Get annotated value\n     * @param id - Name of property\n     * @returns Value of property\n     */\n    static get(id) {\n        const entry = WhiteBoard.entries[id];\n        if (entry === undefined) {\n            return null;\n        }\n        else {\n            return entry;\n        }\n    }\n    /**\n     * Remove entry from whiteboard\n     * @param id - Name of property\n     */\n    static remove(id) {\n        delete WhiteBoard.entries[id];\n        this.publishEvent(id, null);\n    }\n    /**\n     * Remove all entries from whiteboard\n     */\n    static removeAll() {\n        WhiteBoard.entries = {};\n    }\n    /**\n     * Inner class to publish event on bus\n     * @param id - Id of property\n     * @param value - Value of property\n     */\n    static publishEvent(id, value) {\n        EventBus.publishEvent(EventType.WHITEBOARD, new WhiteBoardEventData(id, value));\n    }\n}\n/**\n * List of entries on whiteboard\n */\nWhiteBoard.entries = {};\n","import { Logger } from \"./logger\";\nimport { Toast } from \"./toast\";\nimport { Translator } from \"./translator\";\nimport { Settings } from \"./settings\";\nimport { Game } from \"./game\";\nimport { InputListener, ShortcutListener } from \"./input\";\nimport { WhiteBoard } from \"./whiteboard\";\nimport { System } from \"./system\";\n/**\n * Wrapper class for initialitate and shutdown framework\n */\nexport class Framework {\n    /**\n     * Private to prevent instantiation\n     */\n    constructor() { }\n    /**\n     * Initialize framework\n     * @param serverApi - ServerApi for plugin\n     * @param pluginName - Plugin name\n     * @param pluginVersion - Plugin version\n     * @param translations - Map of translations\n     */\n    static async initialize(pluginName, pluginVersion, settings = {}) {\n        await Logger.initialize(pluginName);\n        await Settings.initialize();\n        await Logger.initialize(pluginName);\n        if (settings.system)\n            await System.initialize(settings.system);\n        if (settings.toast)\n            await Toast.initialize(pluginName, settings.toast);\n        if (settings.translator)\n            await Translator.initialize(settings.translator);\n        if (settings.game)\n            await Game.initialize(settings.game);\n        if (settings.input && settings.input.keyPress) {\n            await InputListener.initialize();\n            if (settings.input.shortcut)\n                await ShortcutListener.initialize();\n        }\n        Logger.info(\"Started plugin \" + pluginName + \" v\" + pluginVersion);\n    }\n    /**\n     * Shutdown framework\n     */\n    static async shutdown() {\n        await Game.stop();\n        await InputListener.stop();\n        await ShortcutListener.stop();\n        await Settings.stop();\n        await WhiteBoard.stop();\n        await System.stop();\n        Logger.info(\"Stopped plugin\");\n    }\n}\n","import { FC, SVGAttributes } from 'react';\n\nexport const RogIcon: FC<SVGAttributes<SVGElement>> = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"20\"\n    width=\"20\"\n    viewBox=\"-5.3 -1792.9 8666.25 8666.25\"\n    {...props}\n  >\n    <g>\n      <path\n        d=\"m5201.05 641.04c-13.53 3.96-17.03 10.03-30.44 21.5-10.8 9.23-19.91 15.78-30.39 24.8-23.98 20.65-38.04 33.42-59.13 51.15-104.65 88.04-246.64 225.21-349.23 321.27-159.15 149.02-302.58 292.53-455.26 440.74-287.94 279.51-614.24 615.13-902.44 884.6-238.17 222.69-442.45 422.69-691.34 645.32-95.12 85.08-155.04 162.58-284.55 167.06-213.73 7.38-495.66-174.55-639.84-257.27-125.99-72.28-460.62-269.07-621.94-274.53l118.19 162.36c84.51 128.95 226.6 409.82 294.84 546.49 234.45 469.54 550.96 961.22 953.8 1288.28 103 83.62 196.33 153.92 327.16 233.08 57.39 34.72 115.94 63.6 180.12 99.93 22.25 12.59 176.55 84.65 195.57 84.61-42.26-42.35-85.73-94.09-120.07-134.47-153.36-180.35-494.52-531.02-596.99-710-86.04-150.27-105.81-242.3-10.2-393.13 109.3-172.42 364.18-385.78 524.07-522.54 389.11-332.8 740.02-634.22 1147.14-950.19 192.9-149.71 393.46-302.43 600.91-450.46 203.51-145.21 408.06-285.1 620.51-425.53l320.79-204.14c29.76-17.07 321.94-191.02 326.61-196.85l285.9-157.72c96.02-54.24 189.26-99.52 290.94-154.28 298.37-160.67 890.92-422.55 1230.48-542.34 111.46-39.32 217.67-76.46 330.41-114.98l337.89-105.84c-27.34-14.06-400.68-17.93-469.46-17.94-276.82-.04-446.66 7.68-710.93 28.56-202.26 15.98-578.64 57.5-762.57 101.97-33.11 8-72.31 11.42-105.65 20.2-63.77 16.8-136.77 28.36-202.08 44.62-134.67 33.53-256.94 71.52-383.51 109.26-130.28 38.84-248.11 84.88-364.66 132.83-68.86 28.33-276.96 167.45-294.64 203.59zm2703.87 668.67 245.7-125.47c85.23-40.58 173.38-87.23 253.65-126.46 162.87-79.59 256.68-337.47 254.31-502.79-28.76 1.21-145.77 56.67-177.53 68.3-21.84 7.99-42 14.87-62.46 23.57-145.1 61.65-338.81 134.55-476.35 199.46-39.94 18.85-78.54 34.44-118.96 51.78-31.73 13.61-101.69 41.06-114.73 57.25-43.66-2.22-932.65 438.32-1043.46 495.62-157.77 81.58-356.17 179.36-507.81 263.73-17.96 9.99-480.25 254.66-498.67 278.22-30.44 5.08-347.32 193.25-397.89 221.79-627.03 353.81-1321.46 798.9-1922.06 1206.24-166.91 113.21-380.1 261.73-547.86 388.13l-134.66 100.52c-15.48 11.8-33.74 19.62-42.66 37.33 59.88 51.54 456.55 214.98 551.18 249.09 531.13 191.42 1028.25 324.79 1587.07 420.7l354.64 54.24 279.34 24.64-227.51-20.07c43.42 4.94 86.52 12 128.76 16.04 62.48 5.97 124.46 11.06 188.81 17.51 121.2 12.16 261.93 20.44 386.52 22.64 154.89 2.72 240.23 10.63 367.22-43 98.44-41.57 178.56-93.28 256.81-153.25 291.46-223.35 550.76-572.68 757.62-888.83 216.49-330.86 411.48-700.53 579.56-1066.77 85.61-186.53 165.92-381.15 241.55-579.41 38.33-100.49 71.57-197.54 106.19-304.17 19.17-59.03 88.92-274.54 94.23-322.69-79.51 10.86-1469.62 760.88-1601.89 831.89-179.39 96.31-351.17 196.63-525.22 291.16-169.14 91.87-348.06 200.44-516.36 293.98-341.95 190.05-686.31 401.75-1027.78 599.46-58.55 33.9-493.37 288.09-508.99 305.96 29.23-4.69 1407.81-596.72 1441.19-610.51 65.01-26.88 1418.57-607.72 1440.77-608.69-7.78 31.3-91.56 187.71-112.71 233.68-35.24 76.6-77.73 163.78-116.24 239.96-218.27 431.79-455.16 950.26-931.72 1141.65l-28.63 17.19c-25.54.58-95.31 28.94-126.08 37.39-46.32 12.72-91.09 21.55-137.78 31.11-219.65 44.98-551.71 21.53-780.61-14.28-261.02-40.84-443.79-86.66-696.8-147.82-60.4-14.6-496.94-137.23-522.16-153.89 14.22-24.79 263.88-184.77 285.73-199.95 483.07-335.77 1285.47-829.17 1807.31-1126.07 55.23-31.43 106.56-59.98 157.06-88.92 41.98-24.06 118.82-64.17 152.73-88.81l244.16-133.92c82.56-45.8 158.37-85.48 245.33-135.11 164.4-93.81 330.97-172.45 492.78-263.6 23.79-13.4 947.81-498.95 1005.34-515.74zm-6281.42 2534.49c-9.6-20.39-176.45-197.43-209.6-234.44-210.42-234.95-414.41-453.8-625.9-700.64-147.34-171.96-278.59-330.41-403.81-482.34-52.4-63.57-339.95-424.53-383.88-498.13-5.61 14.15 66.78 310.04 77.47 348.92 16.39 59.64 29.07 113.99 45.79 174.85 163.4 594.9 326.69 820.03 889.36 1107.54 69.31 35.41 573.16 279.12 610.57 284.24z\"\n        fill=\"orange\"\n      />\n    </g>\n  </svg>\n);\n","import { FC } from 'react';\n\nexport const MainMenu: FC = () => {\n  return <></>;\n};\n","import pckage from '../../package.json';\nimport plugin from '../../plugin.json';\n\nexport class Constants {\n  public static PLUGIN_NAME = plugin.name;\n  public static PLUGIN_VERSION = pckage.version;\n}\n","import { Backend } from 'decky-plugin-framework';\n\n/**\n * The Backend class provides access to plugin Python backend methods\n */\nexport class BackendUtils {\n  /**\n   * Private constructor to prevent instantiation\n   */\n  private constructor() {}\n\n  /**\n   * Method to get the plugin log\n   * @returns A Promise of the log as a string\n   */\n  public static async getPluginLog(): Promise<string> {\n    return Backend.backend_call<[], string>('get_plugin_log');\n  }\n\n  /**\n   * Method to get the plugin log\n   * @returns A Promise of the log as a string\n   */\n  public static async getPluginName(): Promise<string> {\n    return Backend.backend_call<[], string>('get_plugin_name');\n  }\n\n  public static async dbusStopGame(game_name: string): Promise<string | null> {\n    return Backend.backend_call<[game_name: string], string>('dbus_stop_game', game_name);\n  }\n\n  public static async dbusLaunchGame(game_name: string): Promise<string | null> {\n    return Backend.backend_call<[game_name: string], string>('dbus_launch_game', game_name);\n  }\n}\n","import { EventBus, EventData, EventType, GameLifeEventData, Logger } from 'decky-plugin-framework';\n\nimport { BackendUtils } from './backend';\n\nexport class Listeners {\n  private static unsubscribeGameEvents: (() => void) | undefined = undefined;\n\n  public static bind(): void {\n    Listeners.unsubscribeGameEvents = EventBus.subscribe(EventType.GAME_LIFE, (e: EventData) => {\n      const event = e as GameLifeEventData;\n      Logger.info('New game event:', event);\n      event.getDetails().then((game) => {\n        if (event.isRunning()) {\n          BackendUtils.dbusLaunchGame(game.getDisplayName());\n        } else {\n          BackendUtils.dbusStopGame(game.getDisplayName());\n        }\n      });\n    }).unsubscribe;\n  }\n\n  public static unbind(): void {\n    if (Listeners.unsubscribeGameEvents) {\n      Listeners.unsubscribeGameEvents();\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { definePlugin } from '@decky/api';\nimport { staticClasses } from '@decky/ui';\nimport { Framework, FrameworkCfg } from 'decky-plugin-framework';\n\nimport translations from '../assets/translations.i18n.json';\nimport { RogIcon } from './components/icons/rogIcon';\nimport { MainMenu } from './pages/MainMenu';\nimport { Constants } from './utils/constants';\nimport { Listeners } from './utils/listeners';\n\nexport default definePlugin(() => {\n  (async (): Promise<void> => {\n    const frameworkConfiguration: FrameworkCfg = {\n      game: {\n        lifeCycle: true\n      },\n      toast: {\n        logo: window.SP_REACT.createElement(RogIcon, {\n          width: 30,\n          height: 30\n        })\n      },\n      translator: {\n        translations\n      }\n    };\n    await Framework.initialize(\n      Constants.PLUGIN_NAME,\n      Constants.PLUGIN_VERSION,\n      frameworkConfiguration\n    );\n\n    Listeners.bind();\n  })();\n\n  return {\n    name: Constants.PLUGIN_NAME,\n    title: <div className={staticClasses.Title}>{Constants.PLUGIN_NAME}</div>,\n    content: <MainMenu />,\n    icon: <RogIcon width={20} height={20} />,\n    onDismount(): void {\n      Listeners.unbind();\n      Framework.shutdown();\n    }\n  };\n});\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}