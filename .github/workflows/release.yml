name: Release AppImage

on:
  push:
    branches:
      - main

jobs:
  compile_and_release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libfuse2 qt6-base-dev qt6-tools-dev qt6-tools-dev-tools build-essential cmake libsecret-1-dev libzstd-dev pkg-config libudev-dev clang clang-format zsync
          npm i -g pnpm@8.5.1 shx@0.3.4

      - name: Compile
        run: |
          cmake --version
          PYTHONUNBUFFERED=1 make release

            if [[ -n $(git status --porcelain "RogControlCenter") ]]; then
                changes=1
                break
            fi

          if [[ $changes -eq 1 ]]; then
              echo "Committing pending files before release..."
              git add .
              git commit -m "[ci skip] Pending files before release"
          fi

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=$(cat resources/version)" >> $GITHUB_ENV

      - name: Create tag
        run: |
          git tag "${{ env.VERSION }}"
          make increase_version
          git push origin main
          git push origin main:develop --force
          git checkout develop
          git add CMakeLists.txt > /dev/null
          git commit -m "[ci skip] Ready for next development iteration" > /dev/null
          git push origin develop --force

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          files: |
            dist/RogControlCenter.AppImage
            dist/RogControlCenter.AppImage.zsync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
