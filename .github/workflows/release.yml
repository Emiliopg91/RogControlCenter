name: Release AppImage

on:
  push:
    branches:
      - main

jobs:
  prepare_and_install:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2
          npm i -g pnpm@8.5.1 shx@0.3.4
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          PYTHONUNBUFFERED=1 uv run scripts/install.py skipSubmodules

      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          echo "version=$(uv run scripts/version.py)" >> $GITHUB_OUTPUT

      - name: Lint Python code
        run: |
          PYTHONUNBUFFERED=1 uv run scripts/lint.py

      - name: Build submodules
        run: |
          PYTHONUNBUFFERED=1 uv run scripts/install.py

      - name: Upload OpenRGB
        uses: actions/upload-artifact@v4
        with:
          name: rpm
          path: assets/OpenRGB

      - name: Upload RCCDeckyCompanion
        uses: actions/upload-artifact@v4
        with:
          name: rpm
          path: assets/RCCDeckyCompanion

  generate_appimage:
    needs: prepare_and_install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download OpenRGB artifact
        uses: actions/download-artifact@v4
        with:
          name: OpenRGB
          path: assets

      - name: Download RCCDeckyCompanion artifact
        uses: actions/download-artifact@v4
        with:
          name: RCCDeckyCompanion
          path: assets

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Setup and Install
        run: |
          ls assets
          sudo apt-get update
          sudo apt-get install -y libfuse2
          npm i -g pnpm@8.5.1 shx@0.3.4
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          PYTHONUNBUFFERED=1 uv run scripts/install.py skipSubmodules

      - name: Generate AppImage
        run: |
          PYTHONUNBUFFERED=1 uv run scripts/appimage.py

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: appimage
          path: dist/RogControlCenter.AppImage

  generate_rpm:
    needs: prepare_and_install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download OpenRGB artifact
        uses: actions/download-artifact@v4
        with:
          name: OpenRGB
          path: assets

      - name: Download RCCDeckyCompanion artifact
        uses: actions/download-artifact@v4
        with:
          name: RCCDeckyCompanion
          path: assets

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Setup and Install
        run: |
          ls assets
          sudo apt-get update
          sudo apt-get install -y libfuse2 rpm build-essential
          npm i -g pnpm@8.5.1 shx@0.3.4
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          PYTHONUNBUFFERED=1 uv run scripts/install.py skipSubmodules

      - name: Generate RPM
        run: |
          PYTHONUNBUFFERED=1 uv run scripts/rpm.py

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm
          path: dist/rogcontrolcenter.x86_64.rpm

  release:
    needs: [generate_appimage, generate_rpm, prepare_and_install]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download AppImage artifact
        uses: actions/download-artifact@v4
        with:
          name: appimage
          path: dist

      - name: Download RPM artifact
        uses: actions/download-artifact@v4
        with:
          name: rpm
          path: dist
          
      - name: Create tag
        run: |
          git tag "${{ needs.prepare.outputs.version }}"

          PYTHONUNBUFFERED=1 uv run scripts/version.py increment > /dev/null
          git add . > /dev/null
          git commit -m "[ci skip] Ready for next development iteration" > /dev/null

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare.outputs.version }}
          name: ${{ needs.prepare.outputs.version }}
          files: |
            RogControlCenter.AppImage
            rogcontrolcenter.x86_64.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Reset submodules
        run: |
          git submodule foreach --recursive "git reset --hard"
          git submodule foreach --recursive "git clean -fd"

      - name: Push changes to main and force push to develop
        run: |
          git push origin
          git push origin main:develop --force
