name: Release AppImage and PKGBUILD

on:
  push:
    branches:
      - main

jobs:
  compile_orgb:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository without submodules
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Initialize submodule
        run: |
          git submodule init submodules/OpenRGB
          git submodule update --remote submodules/OpenRGB

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            libfuse2 \
            git \
            build-essential \
            qtcreator \
            qtbase5-dev \
            qtchooser \
            qttools5-dev-tools \
            qt5-qmake \
            qtbase5-dev-tools \
            libusb-1.0-0-dev \
            libhidapi-dev \
            pkgconf \
            libmbedtls-dev \
            qttools5-dev-tools
            
          qtchooser -l
          qtchooser -run-tool=qmake -qt=5 --version

      - name: Compile
        run: |
          make build_openrgb

      - name: Upload OpenRGB
        uses: actions/upload-artifact@v4
        with:
          name: OpenRGB
          path: build/assets/OpenRGB

  compile_rccdc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Initialize submodule
        run: |
          git submodule init submodules/RccDeckyCompanion
          git submodule update --remote submodules/RccDeckyCompanion

      - name: Install dependencies
        run: |
          npm i -g pnpm@8.5.1 shx@0.3.4

      - name: Compile
        run: |
          PYTHONUNBUFFERED=1 make build_rccdc

      - name: Upload RccDeckyCompanion
        uses: actions/upload-artifact@v4
        with:
          name: RccDeckyCompanion
          path: build/assets/RccDeckyCompanion

  compile_and_release:
    runs-on: ubuntu-latest
    needs:
      - compile_orgb
      - compile_rccdc
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libfuse2 libhidapi-hidraw0 qt6-wayland qt6-base-dev qt6-charts-dev libqt6charts6 qt6-base-dev qt6-tools-dev qt6-tools-dev-tools build-essential cmake qtkeychain-qt6-dev pkg-config libudev-dev clang clang-format zsync

      - name: Configure project
        run: |
          make config

      - name: Download OpenRGB artifact
        uses: actions/download-artifact@v4
        with:
          name: OpenRGB
          path: build/assets/OpenRGB

      - name: Download RccDeckyCompanion artifact
        uses: actions/download-artifact@v4
        with:
          name: RccDeckyCompanion
          path: build/assets/RccDeckyCompanion

      - name: Compile
        run: |
          make release

            if [[ -n $(git status --porcelain "RogPerfTuner") ]]; then
                changes=1
                break
            fi

          if [[ $changes -eq 1 ]]; then
              echo "Committing pending files before release..."
              git add .
              git commit -m "[ci skip] Pending files before release"
          fi

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=$(cat resources/version)" >> $GITHUB_ENV

      - name: Create tag
        run: |
          git tag "${{ env.VERSION }}"
          make increase_version
          git push origin main
          git push origin main:develop --force
          git checkout develop
          git add CMakeLists.txt > /dev/null
          git commit -m "[ci skip] Ready for next development iteration" > /dev/null
          git push origin develop --force

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          files: |
            dist/PKGBUILD
            dist/RogPerfTuner.AppImage
            dist/RogPerfTuner.AppImage.zsync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
