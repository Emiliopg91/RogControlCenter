name: Release production build

on:
  push:
    branches:
      - main

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get version
        run: echo "VERSION=$(python3 script/version.py)" >> $GITHUB_ENV

      - name: Build application
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTION_PAT }}
        run: make release

      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Tag and prepare for next iteration
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTION_PAT }}
        run: |
          VERSION=${{ env.version }}
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"
          git tag "$VERSION"
          git push origin "$VERSION"
          NEW_VERSION=$(python3 scripts/version.py increase)
          echo "Updating version from $VERSION to $NEW_VERSION"
          git add -u
          git reset -- .github/workflows/main.yml
          git commit -m "[ci skip] Prepare for next development iteration"
          git push origin main
          git fetch
          git checkout --force develop
          git reset --hard main
          git push --force

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTION_PAT }}
        with:
          tag_name: "${{ env.VERSION }}"
          release_name: "${{ env.VERSION }}"
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release RogControlCenter.AppImage file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTION_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/RogControlCenter.AppImage
          asset_name: RogControlCenter.AppImage
          asset_content_type: application/octet-stream
